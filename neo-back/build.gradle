
buildscript {
    ext {
        springBootVersion = '2.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/spring'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central'}
        mavenCentral()

        /*
		 google()
        jcenter()
		*/
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // mybatis-generator 插件路径
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
    }
}
apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
//引入 mybatis-generator 插件
apply plugin: "com.arenagod.gradle.MybatisGenerator"
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

allprojects {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/spring'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central'}
        mavenCentral()

        /*
		 google()
        jcenter()
		*/
    }
}
dependencies {
    compile group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation 'com.auth0:java-jwt:3.10.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.3.3.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.11'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE')
    compileOnly 'org.projectlombok:lombok:1.18.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.2'
    //mybatis-generator core 包
    compile group: 'tk.mybatis', name: 'mapper', version: '3.5.3'
    compile group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version: '2.1.0'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.3'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-maven-plugin', version: '1.3.2'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.5'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.0'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
    compile group: 'gradle.plugin.com.arenagod.gradle', name: 'mybatis-generator-plugin', version: '1.4'
}

test {
    useJUnitPlatform()
}

configurations {
    mybatisGenerator
}
// mybatis-generator.xml 配置路径
//这里会遇到个问题：MyBats Generator 通过xml生成，有日志但是没有生成文件成功的问题，
////原因：mac下是找不到 ./src 路径的，需要全路径，如下配置。windiows则为src/main/resources/generator.xml
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatisGenerator.xml'
}
sourceSets {
    main {
        resources {
            //可以将java目录下的所有非.java资源打包到classes下
            srcDirs = ['src/main/java', 'src/main/resources']
        }
    }
}
apply plugin: 'java'
jar {
    from('src/main/java'){
        include '**/*Mapper.xml'
    }
}
