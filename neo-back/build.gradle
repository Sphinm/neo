
buildscript {
    ext {
        springBootVersion = '2.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/spring'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central'}
        mavenCentral()

        /*
		 google()
        jcenter()
		*/
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // mybatis-generator 插件路径
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
    }
}
apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
//引入 mybatis-generator 插件
apply plugin: "com.arenagod.gradle.MybatisGenerator"
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

allprojects {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/spring'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google'}
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/central'}
        mavenCentral()

        /*
		 google()
        jcenter()
		*/
    }
}
dependencies {
    compile group: 'gradle.plugin.com.arenagod.gradle', name: 'mybatis-generator-plugin', version: '1.4'
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation 'com.auth0:java-jwt:3.10.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.11'
    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2")
    testImplementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2")
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE')
    compileOnly 'org.projectlombok:lombok:1.18.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.2'
    //mybatis-generator core 包
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.3'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-maven-plugin', version: '1.3.2'
}

test {
    useJUnitPlatform()
}

configurations {
    mybatisGenerator
}
// mybatis-generator.xml 配置路径
//这里会遇到个问题：MyBatis Generator 通过xml生成，有日志但是没有生成文件成功的问题，
//原因：mac下是找不到 ./src 路径的，需要全路径，如下配置。windows则为src/main/resources/generator.xml
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatisGenerator.xml'
}

